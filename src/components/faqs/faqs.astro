---
import MarkdownIt from 'markdown-it';
const { content, faqs, layout } = Astro.props;
const md = new MarkdownIt({ html: true });
---
<style lang="scss" is:global>
  [data-faqs] {
    @extend %primary-wrapper;

    .wrapper {
      padding: 4.5rem 0;
    }

    @include media-tablet {
      .wrapper {
        display: flex;
        justify-content: center;
        gap: 2rem;

        &.wrapper--left {
          flex-direction: row;
        }
        &.wrapper--right {
          flex-direction: row-reverse
        }
        &.wrapper--top {
          flex-direction: column;
          max-width: 34rem;
          margin: 0 auto;
        }
      }
    }

    .faqs {
      margin: 0;

      dt {
        border-bottom: solid 1px transparent;
        padding: .5em .5em .5em 1.3rem;
        position: relative;
        cursor: pointer;

        &.active {
          svg {
            transform: rotate(90deg);
          }
        }

        &:hover {
          span {
            padding-left: .5em;
          }
        }

        span {
          padding-left: 0;
          transition: padding-left 200ms;
        }

        svg {
          transition: transform 200ms;
          transform: rotate(0deg);
          fill: $color_text_default;
          width: 1.2rem;
          height: 1.2rem;
          position: absolute;
          left: 0;
          top: .6rem;
        }
      }
      dd {
        transition: max-height 500ms ease-in-out;
        margin: 0;
        padding: 0 1.3rem;
        max-height: 0;
        overflow: hidden;

        &.active {
          max-height: 500px;
        }
      }
    }
  }

  [data-layout-section].section--primary [data-faqs] .faqs{
    dt {
      border-bottom-color: $color_primary_lite;
    }
    dd {
      background-color: $color_primary_transition;
    }
  }
  [data-layout-section].section--secondary [data-faqs] .faqs{
    dt {
      border-bottom-color: $color_secondary_lite;
    }
    dd {
      background-color: $color_secondary_transition;
    }
  }
</style>
<div data-faqs>
  <div class:list={['wrapper',`wrapper--${layout.orintation}`]}>
    <header>
      { content && <div class="rt" set:html={md.render(content)}></div>}
    </header>
    <dl class="faqs">
      { faqs.map((item, index) => (
        <dt role="button" aria-label="Show FAQ answer" class:list={['h3', {active: index === 0 || ENV_BOOKSHOP_LIVE}]}>
          <svg><use xlink:href='#caret-right'></use></svg>
          <span>{ item.question || 'This is an empty answer' }</span>
        </dt>
        <dd class:list={['rt', {active: index === 0 || ENV_BOOKSHOP_LIVE}]} set:html={md.render(item?.answer || 'This is a empty question')}></dd>
      ))}
    </dl>
  </div>
</div>
<script>
  const faqs = document.querySelector('[data-faqs]');
  faqs?.addEventListener('click', (e) => {
    const dt = e.target?.closest('dt');
    if (dt) {
      const dd = dt.nextElementSibling;
      dt.classList.toggle('active');
      dd.classList.toggle('active');
    }
  });
</script>