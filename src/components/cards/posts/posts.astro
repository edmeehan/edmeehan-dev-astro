---
import MarkdownIt from 'markdown-it';
import Card from "src/components/card/post.astro";
import { getCollection } from "astro:content";
const { content, posts, section } = Astro.props;

const blogPosts = await getCollection('blog', ({ data }) => posts.includes(data.uuid));
const projectPosts = await getCollection('projects', ({ data }) => posts.includes(data.uuid));
const allPostsData = [].concat(blogPosts,projectPosts);
const postsData = posts.map(id => allPostsData.find(({data}) => data.uuid === id));
const md = new MarkdownIt({ html: true });
---
<style lang="scss" is:global>
  [data-cards-posts] {
    @extend %primary-wrapper;

    > header {
      text-align: center;
      padding-top: 4.5rem;
      padding-bottom: 3rem;
    }
    .rt > * {
      margin-left: auto;
      margin-right: auto;
    }
    > ul {
      margin: 0;
      padding-left: 0;
      padding-bottom: 4.5rem;
      list-style: none;
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 2em;

      @include media-tablet {
        column-gap: 5%;
        row-gap: 2em;
      }

      > li {
        @include media-tablet {
          flex: 0 0 30%;
        }
      }
    }
  }
</style>

<div data-cards-posts>
  <header>
    { content && <div class="rt" set:html={md.render(content)}></div>}
  </header>
  { postsData && (
    <ul>
      { postsData.map((post) => (
        <li>
          <Card show_excerpt={true} post={post}/>
        </li>
      ))}
    </ul>
  )}
</div>