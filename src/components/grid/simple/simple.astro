---
import MarkdownIt from 'markdown-it';
import Image from 'src/components/global/image/image.astro';
const { content, cta, section, layout, grid_items } = Astro.props;
const md = new MarkdownIt({ html: true });
---
<style lang="scss" is:global>
  .wrapper[data-grid-simple] {
    @extend %primary-wrapper;

    .content {
      padding-top: 4.5rem;
      padding-bottom: 3rem;
    }
    .list {
      display: flex;
      flex-wrap: wrap;
      padding-bottom: 4.5rem;
      padding-left: 0;
      margin: 0;
      list-style: none;
      row-gap: 1.7rem;
      column-gap: 8%;

      &--left {
        @extend .list;
        justify-content: flex-start;
      }

      &--center {
        @extend .list;
        justify-content: center;
      }
    }
    li {
      flex: 0 0 46%;
      // transition: ${({transitionDelay:delay}) => `opacity 500ms ${delay * 250 + 200}ms, transform 500ms ${delay * 250}ms`};
      // opacity: ${({transition}) => transition ? 1 : 0};
      // transform: translateY(${({transition}) => transition ? '0%' : '50%'});

      @include media-laptop-sm {
        flex-basis: 28%;
      }
    }
  }
</style>

<div class="wrapper" data-grid-simple>
  <div class:list={['content', { 'rt-center': layout.text_align === 'center'}]}>
    { content && <div class="rt" set:html={md.render(content)}></div>}
  </div>
  { grid_items && (
    <ul class={`list--${layout.text_align}`}>
      { grid_items.map((item) => (
        <li>
          { item.image && <Image image={item.image}
            srcset={[600,768,900,1536]}
            sizes='(max-width: 1023px) 50vw,(max-width: 1380px) calc(90vw - 550px), 768px'
          />}
          { item.content && (
            <div
              class:list={[{ 'rt-center': layout.text_align === 'center'}]}
              set:html={md.render(item.content)}
            ></div>
          )}
        </li>
      ))}  
    </ul>
  )}
</div>