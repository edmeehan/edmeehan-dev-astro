---
import MarkdownIt from 'markdown-it';
import Image from 'src/components/global/image/image.astro';
import CTA from 'src/components/global/cta/cta.astro';
const { content, image, cta, layout, grid_items } = Astro.props;
const md = new MarkdownIt({ html: true });
---
<style lang="scss" is:global>
  .wrapper[data-grid-alternate] {
    @extend %primary-wrapper;
    padding: 4.5rem 0;

    @include media-tablet {
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: space-evenly;
    }

    &.wrapper--left {}

    &.wrapper--right {
      @include media-tablet {
        flex-direction: row-reverse;
      }
    }

    .content {
      position: relative;
      
      @include media-tablet {
        flex: 0 1 auto;
      }

      @include media-tablet-max {
        padding-bottom: 4rem;
      }
    }
    .image {
      margin-bottom: -50px;

      @include media-tablet-max {
        z-index: -1;
      }

      @include media-tablet {
        margin-bottom: 0;
        flex: 0 0 50%;
      }

      &--small {
        @extend .image;
        @include media-tablet {
          flex: 0 0 35%;
        }
      }

      &--large {
        @extend .image;
      }
    }
    .items {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem;
      padding-left: 0;
      margin: 0;
      list-style: none;

      &--small {
        @extend .items;
        @include media-tablet-sm {
          grid-template-columns: repeat(3, 1fr);
        }
      }

      &--large {
        @extend .items;
      }
    }
  }
</style>

<div class:list={[`wrapper`,`wrapper--${layout.image_align}`]} data-grid-alternate>
  <div class:list={[`image--${layout.image_width}`]}>
    { image && <Image image={image}
      srcset={[600,768,900,1536]}
      sizes='(max-width: 1023px) 50vw,(max-width: 1380px) calc(90vw - 550px), 768px'
    />}
  </div>
  <div class="content">
    { content && <div class="rt" set:html={md.render(content)}></div>}
    { cta && <CTA {...cta} />}
    { grid_items && (
      <ul class:list={[`items--${layout.image_width}`]}>
        { grid_items.map((item) => (
          <li>
            { item.image && <Image image={item.image}
              srcset={[600,768,900,1536]}
              sizes='(max-width: 1023px) 50vw,(max-width: 1380px) calc(90vw - 550px), 768px'
            />}
            <div set:html={md.render(item.content)}></div>
          </li>
        )) }
      </ul>
    )}
  </div>
</div>