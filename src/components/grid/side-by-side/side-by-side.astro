---
import MarkdownIt from 'markdown-it';
import Image from 'src/components/global/image/image.astro';
import CTA from 'src/components/global/cta/cta.astro';
const { content, image, cta, layout } = Astro.props;
const md = new MarkdownIt({ html: true });
---
<style lang="scss" is:global>
  .grid-sbs {
    @extend %primary-wrapper;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 3rem;
    padding: 3.5rem 0;

    @include media-tablet-max {
      .content {
        text-align: center;
        p.rt, .h1 {
          margin-left: auto;
          margin-right: auto;
        }
      }
    }

    @include media-tablet {
      gap: 1.5rem;
      justify-content: center;
      flex-direction: row;
      align-items: stretch;

      .content {
        align-self: var(--align);
      }
      .media {
        align-self: var(--align);
        &--expand {
          flex: 1 0 auto;
        }
      }

      &.grid-sbs--left {}

      &.grid-sbs--right {
        flex-direction: row-reverse;
      }
    }
  }

  [data-index="0"] {
    .grid-sbs {
      padding: 0 0 1rem;
    }
  }

  .section--animate {
    .grid-sbs {
      > * {
        opacity: 0;
        transition: all 0.5s ease-in-out;
      }
      > *:first-child {
        transform: translateX(10vw);
      }
      > *:last-child {
        transform: translateX(-10vw);
      }
    }
    &.animate {
      .grid-sbs {
        > * {
          opacity: 1;
          transform: translateX(0vw);
        }
      }  
    }
  }
</style>
<div data-grid-side-by-side
  class:list={[
    'grid-sbs',
    { mini: layout.is_mini },
    `grid-sbs--${layout.format}`
  ]}>
  <div class:list={[
      "media",
      {"media--expand": layout.media_expand }
    ]}
    style={{'--align': layout.media_align, '--justify': layout.media_justify }}>
    { image && <Image image={image}
      srcset={[400,500,600,700,800,1000,1200,1400,1600]}
      sizes={ layout.image_width === 'small'
        ? '(max-width: 767px) 90vw,(max-width: 1650px) calc(35vw - 45px), 560px'
        : '(max-width: 767px) 90vw,(max-width: 1650px) calc(50vw - 45px), 800px'
      }
    />}
  </div>
  <div class="content" style={{'--align': layout.content_align}}>
    { content && <div class="rt" set:html={md.render(content)}></div>}
    { cta && <CTA {...cta} />}
  </div>
</div>