---
import Bubbles from '@components/bubbles.jsx';

const { transition, is_first, is_last, index, background, prev, next} = Astro.props;

const svg_id = `#${transition}-${background}${background === 'loud' ? `-${next?.background}` : ''}`
---
<style lang="scss">
  $transition_swoosh: 12.5%;
  $transition_curve: 6.6%;

  section {
    position: relative;
    // overflow: hidden;
    background: none;
    margin-bottom: 0;

    &.primary {
      background: $color_primary;
    }

    &.secondary {
      background: $color_secondary;
    }

    &.loud {
      background: linear-gradient(0deg, $color_grad_1A, $color_grad_1B);
      margin-bottom: 0;
    }
  }

  // Transitions
  %transitions {
    .content {
      padding-bottom: 1px;
    }
  }

  .swoosh {
    @extend %transitions;
    margin-bottom: -($transition_swoosh);
    .svg {
      padding-bottom: $transition_swoosh;
    }
  }

  .curve {
    @extend %transitions;
    margin-bottom: -($transition_curve);
    .svg {
      padding-bottom: $transition_curve;
    }
  }

  .content {
    padding-bottom: 4rem;
    padding-left: $layout_gutter;
    padding-right: $layout_gutter;
    position: relative;
    z-index: 1;
    min-height: auto;

    &.curve {
      padding-top: $transition_curve;
    }
    &.swoosh {
      padding-top: $transition_swoosh;
    }
    &.loud {
      padding-top: 1px;
    }
  }

  .svg {
    width: 100%;
    height: 0;
    position: relative;
    z-index: $zindex_background;
    
    /* SVG IMAGE RATIO HACK */
    /* allows the graphic to scale at 100% width - keeps the ratio */
    padding-bottom: 0;

    svg {
      position: absolute; 
      height: 100%; 
      width: 100%; 
      left: 0; 
      top: 0;
    }
  }
</style>

<section class:list={[
  background,
  {
    [transition]: (!is_last && !!transition)
  }
]}>
  <div class:list={[
    'content',
    background,
    {
      [transition]: is_first && transition,
      [prev?.transition]: !is_first
    }
  ]}>
    <slot />
  </div>
  { background === 'loud' && (
    <Bubbles client:visible />
  )}
  { !is_last && !!transition && (
    <div class="svg">
      <svg>
        <use xlink:href={svg_id}></use>
      </svg>
    </div>
  )}
</section>
