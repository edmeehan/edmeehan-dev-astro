---
import Bubbles from 'src/components/bubbles.jsx';

const { transition, is_first, is_last, index, background, prev, next} = Astro.props;
const svg_id = `#${transition}-${background}${background === 'loud' ? `-${next?.background}` : ''}`;
const set_transition = transition && !is_last;
const set_prev = !is_first && prev.background !== 'loud';
---
<style lang="scss">
  $transition_swoosh: 12.5%;
  $transition_curve: 6.6%;

  .section {
    position: relative;

    &--primary {
      @extend .section;
      background: $color_primary;
    }

    &--secondary {
      @extend .section;
      background: $color_secondary;
    }

    &--loud {
      @extend .section;
      background: linear-gradient(0deg, $color_grad_1A, $color_grad_1B);
      margin-bottom: 0!important;

      .svg {
        transform: translateY(1px);
      }
    }

    &--swoosh {
      margin-bottom: -($transition_swoosh);
    }

    &--curve {
      margin-bottom: -($transition_curve);
    }
  }

  .content {
    padding-left: $layout_gutter;
    padding-right: $layout_gutter;
    position: relative;
    z-index: 1;

    &--prev-curve {
      @extend .content;
      padding-top: $transition_curve;
    }
    &--prev-swoosh {
      @extend .content;
      padding-top: $transition_swoosh;
    }
    &--prev-none {
      @extend .content;
    }
  }

  .svg {
    width: 100%;
    height: 0;
    position: relative;
    z-index: $zindex_background;
    padding-bottom: 0;

    svg {
      position: absolute; 
      height: 100%; 
      width: 100%; 
      left: 0; 
      top: 0;
    }

    &--curve {
      @extend .svg;
      padding-bottom: $transition_curve;
    }

    &--swoosh {
      @extend .svg;
      padding-bottom: $transition_swoosh;
    }
  }
</style>

<section
  data-index={ index }
  class:list={[`section--${background}`, {[`section--${transition}`]: set_transition}]}
>
  <div class={`content--prev-${set_prev ? prev.transition : 'none'}`}>
    <slot />
  </div>
  { background === 'loud' && (
    <Bubbles client:visible />
  )}
  { set_transition && (
    <div class={`svg--${transition}`}>
      <svg>
        <use xlink:href={svg_id}></use>
      </svg>
    </div>
  )}
</section>
