---
import {imgix} from 'src/shared/utilities.js'
const {
  image, // single image only - won't use sm_srcset or sm_sizes
  images, // 2 images max - uses art direction - uses sm_srcset and sm_sizes
  srcset = [100],
  sizes = '250px',
  sm_srcset = [100],
  sm_sizes = '(max-width: 767px) 90vw'
} = Astro.props;
const use_art_direction = !image && Array.isArray(images) && images.length === 2;
let display_images = [], mobile, desktop;

// has two images - uses art direction
if (use_art_direction) {
  display_images = images.map((item,index) => {
    return {
      ...item,
      sizes: !index ? sizes : sm_sizes,
      srcset: (!index ? srcset : sm_srcset).map(size => `${imgix(item?.src, size)} ${size}w`).join(',')
    }
  })
  mobile = images[1];
  desktop = images[0];
}

// has one image in images array - uses the sm_srcset & sm_sizes
if (!use_art_direction && Array.isArray(images) && images.length === 1) {
  display_images.push({
    ...images[0], sizes: `${sm_sizes},${sizes}`,
    srcset: sm_srcset.concat(srcset).map(size => `${imgix(images[0]?.src, size)} ${size}w`).join(',')
  })
  mobile = images[0];
  desktop = images[0];
}

// has one image
if (!use_art_direction && image) {
  display_images.push({
    ...image, sizes,
    srcset: srcset.map(size => `${imgix(image?.src, size)} ${size}w`).join(',')
  })
  mobile = image;
  desktop = image;
}
---
<style lang="scss" is:global>
  [data-global-image] {
    position: relative;
    aspect-ratio: var(--mobile-ratio);
    max-width: var(--mobile-max-width);
    
    img {
      width: 100%;
      height: 100%;
      display: block;
      object-fit: contain;
    }

    @include media-tablet {
      aspect-ratio: var(--desktop-ratio);
      max-width: var(--desktop-max-width);
    }
  }
</style>
{ display_images.length > 0 && (
  <div data-global-image style={{
    '--desktop-ratio': `${desktop?.width}/${desktop?.height}`,
    '--desktop-max-width': `${desktop?.width}px`,
    '--mobile-ratio': `${mobile?.width}/${mobile?.height}`,
    '--mobile-max-width': `${mobile?.width}px`,
  }} >
  {!use_art_direction && display_images.map(item => (
    <img {...item} />
  ))}
  {use_art_direction && (
    <picture>
      {display_images.map((item, index) => (
        <source {...item}
          media={!index ? '(min-width: 768px)' : '(max-width: 767px)'}
        />
      ))}
      <img src={display_images[0]?.src}
        alt={display_images[0]?.alt}
        loading={display_images[0]?.loading}
      />
    </picture>
  )}
  </div>
)}